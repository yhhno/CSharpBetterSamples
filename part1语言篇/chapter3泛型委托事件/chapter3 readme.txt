0x001  泛型
泛型并不是C#语言一开始就带有的特性，而是在FCL2.0之后实现的新功能。基于泛型，我们得以将类型参数化，以便更大范围地进行代码复用。同时，它减少了泛型类及泛型方法中的转型，确保了类型安全。

 泛型为C#语言带来革命性的变化，FCL之后的很多功能都是借助泛型才能得到很好的是实现，如LINQ。linq借助于泛型和扩展方法，有效地丰富了集合的查询功能，同时避免了代码爆炸并提升了操作的性能。
   我们在设计自己的类型时，应充分考虑到泛型的优点，让自己的类型成为泛型类。

   在编码过程中，应该始终考虑为泛型参数设定约束，正想本建议开始的时候所说，约束使泛型参数成为一个实实在在的“对象”，让它具有了我们想要的行为和属性，而不仅仅是一个object



0x002  委托

委托本身是一种引用类型，它保存的也是托管堆中对象的引用，只不过这个引用比较特殊，它是对方法的引用。事件本身也是委托，它是委托组，C#中提供了关键字event来对事件进行特别区分。

0x003  事件




一旦我们开始编写稍微复杂的C#代码，就肯定离不开泛型、委托和事件。



*********************Resolve************8
1.FCL2.0
2.代码复用
3.引用类型
4.托管堆
5.ILDASM

